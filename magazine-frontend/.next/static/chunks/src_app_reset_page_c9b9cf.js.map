{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/LENOVO/Desktop/MERN%20Stack%20Project/magazine-frontend/src/app/reset/page.js"],"sourcesContent":["'use client';\r\nimport { useState } from 'react';\r\n\r\nconst ResetPassword = () => {\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [passwordResetSuccess, setPasswordResetSuccess] = useState(null);\r\n    const [passwordResetError, setPasswordResetError] = useState(null);\r\n    const [passwordLoading, setPasswordLoading] = useState(false);\r\n\r\n    const handleResetPassword = async () => {\r\n        setPasswordResetSuccess(null);\r\n        setPasswordResetError(null);\r\n        setPasswordLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(\r\n                'http://localhost:5000/reset-password',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    credentials: 'include',\r\n                    body: JSON.stringify({ newPassword }),\r\n                }\r\n            );\r\n\r\n            const data = await response.json();\r\n\r\n            if (!response.ok)\r\n                throw new Error(data.message || 'Failed to reset password');\r\n\r\n            setPasswordResetSuccess('Password reset successful!');\r\n            setNewPassword('');\r\n        } catch (err) {\r\n            setPasswordResetError(err.message);\r\n        } finally {\r\n            setPasswordLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center min-h-screen bg-gray-100 p-4\">\r\n            <div className=\"bg-white shadow-lg rounded-lg p-6 w-full max-w-md text-center\">\r\n                <h2 className=\"text-2xl font-semibold mb-4\">Reset Password</h2>\r\n\r\n                {/* Password Input */}\r\n                <div className=\"flex items-center border rounded-lg overflow-hidden\">\r\n                    <input\r\n                        type=\"password\"\r\n                        value={newPassword}\r\n                        onChange={(e) => setNewPassword(e.target.value)}\r\n                        placeholder=\"New password\"\r\n                        className=\"flex-1 px-3 py-2 focus:outline-none\"\r\n                    />\r\n                    <button\r\n                        onClick={handleResetPassword}\r\n                        disabled={passwordLoading}\r\n                        className=\"bg-blue-500 text-white px-4 py-2 hover:bg-blue-600 transition\">\r\n                        {passwordLoading ? '...' : 'Reset'}\r\n                    </button>\r\n                </div>\r\n\r\n                {/* Success/Error Messages */}\r\n                {passwordResetSuccess && (\r\n                    <p className=\"text-green-500 mt-2\">\r\n                        {passwordResetSuccess}\r\n                    </p>\r\n                )}\r\n                {passwordResetError && (\r\n                    <p className=\"text-red-500 mt-2\">{passwordResetError}</p>\r\n                )}\r\n\r\n                {/* Back to Profile */}\r\n                <button\r\n                    onClick={() => (window.location.href = '/profile')}\r\n                    className=\"mt-4 px-4 py-2 bg-gray-500 text-white rounded-md hover:bg-gray-600 transition\">\r\n                    Back to Profile\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"names":[],"mappings":";;;;AACA;;;AADA;;AAGA,MAAM,gBAAgB;;IAClB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,sBAAsB,wBAAwB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjE,MAAM,CAAC,oBAAoB,sBAAsB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7D,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvD,MAAM,sBAAsB;QACxB,wBAAwB;QACxB,sBAAsB;QACtB,mBAAmB;QAEnB,IAAI;YACA,MAAM,WAAW,MAAM,MACnB,wCACA;gBACI,QAAQ;gBACR,SAAS;oBAAE,gBAAgB;gBAAmB;gBAC9C,aAAa;gBACb,MAAM,KAAK,SAAS,CAAC;oBAAE;gBAAY;YACvC;YAGJ,MAAM,OAAO,MAAM,SAAS,IAAI;YAEhC,IAAI,CAAC,SAAS,EAAE,EACZ,MAAM,IAAI,MAAM,KAAK,OAAO,IAAI;YAEpC,wBAAwB;YACxB,eAAe;QACnB,EAAE,OAAO,KAAK;YACV,sBAAsB,IAAI,OAAO;QACrC,SAAU;YACN,mBAAmB;QACvB;IACJ;IAEA,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC;YAAI,WAAU;;8BACX,6LAAC;oBAAG,WAAU;8BAA8B;;;;;;8BAG5C,6LAAC;oBAAI,WAAU;;sCACX,6LAAC;4BACG,MAAK;4BACL,OAAO;4BACP,UAAU,CAAC,IAAM,eAAe,EAAE,MAAM,CAAC,KAAK;4BAC9C,aAAY;4BACZ,WAAU;;;;;;sCAEd,6LAAC;4BACG,SAAS;4BACT,UAAU;4BACV,WAAU;sCACT,kBAAkB,QAAQ;;;;;;;;;;;;gBAKlC,sCACG,6LAAC;oBAAE,WAAU;8BACR;;;;;;gBAGR,oCACG,6LAAC;oBAAE,WAAU;8BAAqB;;;;;;8BAItC,6LAAC;oBACG,SAAS,IAAO,OAAO,QAAQ,CAAC,IAAI,GAAG;oBACvC,WAAU;8BAAgF;;;;;;;;;;;;;;;;;AAM9G;GA7EM;KAAA;uCA+ES"}},
    {"offset": {"line": 135, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}
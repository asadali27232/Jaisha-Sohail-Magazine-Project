{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/LENOVO/Desktop/MERN%20Stack%20Project/magazine-frontend/src/app/profile/page.js"],"sourcesContent":["'use client';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst UserProfile = () => {\r\n    const [user, setUser] = useState(null);\r\n    const [subscriptions, setSubscriptions] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchProfile = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5000/profile', {\r\n                    method: 'GET',\r\n                    credentials: 'include',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                });\r\n\r\n                if (!response.ok)\r\n                    throw new Error('Not logged in, Login first.');\r\n                const data = await response.json();\r\n                setUser(data);\r\n            } catch (err) {\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        const fetchSubscriptions = async () => {\r\n            try {\r\n                const response = await fetch(\r\n                    'http://localhost:5000/getUserSubscriptions',\r\n                    {\r\n                        method: 'GET',\r\n                        credentials: 'include',\r\n                        headers: { 'Content-Type': 'application/json' },\r\n                    }\r\n                );\r\n\r\n                if (!response.ok)\r\n                    throw new Error('Failed to fetch subscriptions');\r\n\r\n                const data = await response.json();\r\n                setSubscriptions(data);\r\n            } catch (err) {\r\n                console.error(err);\r\n            }\r\n        };\r\n\r\n        fetchProfile();\r\n        fetchSubscriptions();\r\n    }, []);\r\n\r\n    const cancelSubscription = async (subscriptionId) => {\r\n        try {\r\n            const response = await fetch(\r\n                `http://localhost:5000/cancel/${subscriptionId}`,\r\n                {\r\n                    method: 'PUT',\r\n                    credentials: 'include',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                }\r\n            );\r\n\r\n            if (!response.ok) throw new Error('Failed to cancel subscription');\r\n\r\n            setSubscriptions(\r\n                subscriptions.filter((sub) => sub._id !== subscriptionId)\r\n            );\r\n        } catch (err) {\r\n            console.error('Error canceling subscription:', err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col items-center min-h-screen bg-gray-100 p-6\">\r\n            <div className=\"bg-white shadow-lg rounded-lg p-6 w-full max-w-3xl text-center\">\r\n                {loading ? (\r\n                    <p className=\"text-gray-500\">Loading...</p>\r\n                ) : error ? (\r\n                    <div>\r\n                        <p className=\"text-red-500\">{error}</p>\r\n                        <button\r\n                            onClick={() => (window.location.href = '/login')}\r\n                            className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\">\r\n                            Login\r\n                        </button>\r\n                    </div>\r\n                ) : (\r\n                    <>\r\n                        <h2 className=\"text-3xl font-semibold mt-4\">\r\n                            {user.name}\r\n                        </h2>\r\n                        <p className=\"text-gray-600 text-lg\">{user.email}</p>\r\n\r\n                        {/* Subscriptions Section */}\r\n                        <div className=\"mt-6 w-full\">\r\n                            <h3 className=\"text-2xl font-semibold mb-4 text-left\">\r\n                                Your Subscriptions\r\n                            </h3>\r\n                            {subscriptions.length > 0 ? (\r\n                                <div className=\"grid grid-cols-1 sm:grid-cols-2 gap-6\">\r\n                                    {subscriptions.map((sub) => (\r\n                                        <div\r\n                                            key={sub._id}\r\n                                            className=\"bg-gray-50 p-5 rounded-lg shadow-md\">\r\n                                            <h4 className=\"text-lg font-medium\">\r\n                                                {sub.magazine_id.name}\r\n                                            </h4>\r\n                                            <p className=\"text-gray-600\">\r\n                                                Plan: {sub.plan_id.title}\r\n                                            </p>\r\n                                            <p className=\"text-gray-600\">\r\n                                                Discount:{' '}\r\n                                                {sub.plan_id.discount * 100}%\r\n                                            </p>\r\n                                            <p className=\"text-gray-600\">\r\n                                                Price: ${sub.price.toFixed(2)}\r\n                                            </p>\r\n                                            <p className=\"text-gray-600\">\r\n                                                Renewal Date:{' '}\r\n                                                {new Date(\r\n                                                    sub.renewal_date\r\n                                                ).toLocaleDateString()}\r\n                                            </p>\r\n\r\n                                            <div className=\"flex flex-col mt-3\">\r\n                                                <button\r\n                                                    onClick={() =>\r\n                                                        (window.location.href = `/subscribe?id=${sub.magazine_id._id}`)\r\n                                                    }\r\n                                                    className=\"mb-2 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition\">\r\n                                                    Change Plan\r\n                                                </button>\r\n\r\n                                                <button\r\n                                                    onClick={() =>\r\n                                                        cancelSubscription(\r\n                                                            sub._id\r\n                                                        )\r\n                                                    }\r\n                                                    className=\"px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition\">\r\n                                                    Cancel Subscription\r\n                                                </button>\r\n                                            </div>\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            ) : (\r\n                                <p className=\"text-gray-500 text-lg\">\r\n                                    You have no active subscriptions.\r\n                                </p>\r\n                            )}\r\n                        </div>\r\n\r\n                        {/* Logout Button */}\r\n                        <div className=\"mt-6\">\r\n                            <button\r\n                                onClick={() => {\r\n                                    fetch('http://localhost:5000/logout', {\r\n                                        method: 'GET',\r\n                                        credentials: 'include',\r\n                                    })\r\n                                        .then(() => {\r\n                                            localStorage.removeItem('token');\r\n                                            window.location.href = '/login';\r\n                                        })\r\n                                        .catch((err) => console.error(err));\r\n                                }}\r\n                                className=\"mt-4 px-6 py-3 bg-red-500 text-white text-lg rounded-md hover:bg-red-600 transition\">\r\n                                Logout\r\n                            </button>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserProfile;\r\n"],"names":[],"mappings":";;;;AACA;;;AADA;;AAGA,MAAM,cAAc;;IAChB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACjC,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACrD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACvC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEnC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;iCAAE;YACN,MAAM;sDAAe;oBACjB,IAAI;wBACA,MAAM,WAAW,MAAM,MAAM,iCAAiC;4BAC1D,QAAQ;4BACR,aAAa;4BACb,SAAS;gCAAE,gBAAgB;4BAAmB;wBAClD;wBAEA,IAAI,CAAC,SAAS,EAAE,EACZ,MAAM,IAAI,MAAM;wBACpB,MAAM,OAAO,MAAM,SAAS,IAAI;wBAChC,QAAQ;oBACZ,EAAE,OAAO,KAAK;wBACV,SAAS,IAAI,OAAO;oBACxB,SAAU;wBACN,WAAW;oBACf;gBACJ;;YAEA,MAAM;4DAAqB;oBACvB,IAAI;wBACA,MAAM,WAAW,MAAM,MACnB,8CACA;4BACI,QAAQ;4BACR,aAAa;4BACb,SAAS;gCAAE,gBAAgB;4BAAmB;wBAClD;wBAGJ,IAAI,CAAC,SAAS,EAAE,EACZ,MAAM,IAAI,MAAM;wBAEpB,MAAM,OAAO,MAAM,SAAS,IAAI;wBAChC,iBAAiB;oBACrB,EAAE,OAAO,KAAK;wBACV,QAAQ,KAAK,CAAC;oBAClB;gBACJ;;YAEA;YACA;QACJ;gCAAG,EAAE;IAEL,MAAM,qBAAqB,OAAO;QAC9B,IAAI;YACA,MAAM,WAAW,MAAM,MACnB,CAAC,6BAA6B,EAAE,gBAAgB,EAChD;gBACI,QAAQ;gBACR,aAAa;gBACb,SAAS;oBAAE,gBAAgB;gBAAmB;YAClD;YAGJ,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM;YAElC,iBACI,cAAc,MAAM,CAAC,CAAC,MAAQ,IAAI,GAAG,KAAK;QAElD,EAAE,OAAO,KAAK;YACV,QAAQ,KAAK,CAAC,iCAAiC;QACnD;IACJ;IAEA,qBACI,6LAAC;QAAI,WAAU;kBACX,cAAA,6LAAC;YAAI,WAAU;sBACV,wBACG,6LAAC;gBAAE,WAAU;0BAAgB;;;;;uBAC7B,sBACA,6LAAC;;kCACG,6LAAC;wBAAE,WAAU;kCAAgB;;;;;;kCAC7B,6LAAC;wBACG,SAAS,IAAO,OAAO,QAAQ,CAAC,IAAI,GAAG;wBACvC,WAAU;kCAAgF;;;;;;;;;;;qCAKlG;;kCACI,6LAAC;wBAAG,WAAU;kCACT,KAAK,IAAI;;;;;;kCAEd,6LAAC;wBAAE,WAAU;kCAAyB,KAAK,KAAK;;;;;;kCAGhD,6LAAC;wBAAI,WAAU;;0CACX,6LAAC;gCAAG,WAAU;0CAAwC;;;;;;4BAGrD,cAAc,MAAM,GAAG,kBACpB,6LAAC;gCAAI,WAAU;0CACV,cAAc,GAAG,CAAC,CAAC,oBAChB,6LAAC;wCAEG,WAAU;;0DACV,6LAAC;gDAAG,WAAU;0DACT,IAAI,WAAW,CAAC,IAAI;;;;;;0DAEzB,6LAAC;gDAAE,WAAU;;oDAAgB;oDAClB,IAAI,OAAO,CAAC,KAAK;;;;;;;0DAE5B,6LAAC;gDAAE,WAAU;;oDAAgB;oDACf;oDACT,IAAI,OAAO,CAAC,QAAQ,GAAG;oDAAI;;;;;;;0DAEhC,6LAAC;gDAAE,WAAU;;oDAAgB;oDAChB,IAAI,KAAK,CAAC,OAAO,CAAC;;;;;;;0DAE/B,6LAAC;gDAAE,WAAU;;oDAAgB;oDACX;oDACb,IAAI,KACD,IAAI,YAAY,EAClB,kBAAkB;;;;;;;0DAGxB,6LAAC;gDAAI,WAAU;;kEACX,6LAAC;wDACG,SAAS,IACJ,OAAO,QAAQ,CAAC,IAAI,GAAG,CAAC,cAAc,EAAE,IAAI,WAAW,CAAC,GAAG,EAAE;wDAElE,WAAU;kEAAgF;;;;;;kEAI9F,6LAAC;wDACG,SAAS,IACL,mBACI,IAAI,GAAG;wDAGf,WAAU;kEAAyE;;;;;;;;;;;;;uCArCtF,IAAI,GAAG;;;;;;;;;qDA6CxB,6LAAC;gCAAE,WAAU;0CAAwB;;;;;;;;;;;;kCAO7C,6LAAC;wBAAI,WAAU;kCACX,cAAA,6LAAC;4BACG,SAAS;gCACL,MAAM,gCAAgC;oCAClC,QAAQ;oCACR,aAAa;gCACjB,GACK,IAAI,CAAC;oCACF,aAAa,UAAU,CAAC;oCACxB,OAAO,QAAQ,CAAC,IAAI,GAAG;gCAC3B,GACC,KAAK,CAAC,CAAC,MAAQ,QAAQ,KAAK,CAAC;4BACtC;4BACA,WAAU;sCAAsF;;;;;;;;;;;;;;;;;;;;;;;AAShI;GAhLM;KAAA;uCAkLS"}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}